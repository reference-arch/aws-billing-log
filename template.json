{
  "metadata": {
    "templateName": "Load AWS detailed billing report into Redshift",
    "templateDescription": "This template loads the AWS detailed billing report for the current month stored in an Amazon S3 folder to a Redshift table. If you would like to process files from previous months please pick a schedule that starts in the past. The input file must be of the .csv.zip format. Existing entries in the Redshift table are updated with data from S3 and new entries from S3 data are added to the Redshift table. If the table does not exist, it will be automatically created with the same schema as the AWS detailed billing report. The input report file is unzipped and converted to a GZIP file which is stored in the S3 staging folder before loading to Redshift."
  },
  "objects": [
       {
            "startAt": "FIRST_ACTIVATION_DATE_TIME",
           "name": "DailySchedule",
           "id": "DailySchedule",
           "period": "1 day",
           "type": "Schedule"
       },
       {
        "id": "Default",
        "name": "Default",
        "scheduleType": "CRON",
        "schedule": {
        "ref": "DailySchedule"
        },
        "failureAndRerunMode": "CASCADE",
        "role": "DataPipelineDefaultRole",
        "resourceRole": "DataPipelineDefaultResourceRole"
      },
    {
      "id": "DestRedshiftTable",
      "tableName": "#{myRedshiftTableName}",
      "name": "DestRedshiftTable",
      "type": "RedshiftDataNode",
      "database": {
        "ref": "RedshiftCluster"
      },
      "createTableSql": "CREATE TABLE IF NOT EXISTS #{tableName} (invoice_id varchar(255), payer_account_id varchar(255), linked_account_id varchar(255), record_type varchar(255), product_name varchar(255), rate_id varchar(255), subscription_id varchar(255), pricing_plan_id varchar(255), usage_type varchar(255), operation varchar(255), availability_zone varchar(255), reserved_instance varchar(255), item_description varchar(255), usage_start_date varchar(255), usage_end_date varchar(255), usage_quantity FLOAT, blended_rate FLOAT, blended_cost FLOAT, unblended_rate FLOAT, unblended_cost FLOAT, primary key(invoice_id)) distkey(invoice_id) sortkey(invoice_id);",
	  "primaryKeys": ["invoice_id", "payer_account_id", "linked_account_id", "record_type", "product_name", "rate_id", "subscription_id", "pricing_plan_id", "usage_type", "operation", "availability_zone", "reserved_instance", "item_description", "usage_start_date", "usage_end_date"]
    },
    {
      "id": "RedshiftCluster",
      "databaseName": "#{myRedshiftDbName}",
      "username": "#{myRedshiftUsername}",
      "name": "RedshiftCluster",
      "*password": "#{*myRedshiftPassword}",
      "type": "RedshiftDatabase",
      "connectionString": "#{myRedshiftJdbcConnectStr}"
    },
    {
      "name": "S3InputDataNode",
      "id": "S3InputDataNode",
      "type": "S3DataNode",
      "directoryPath": "#{myS3BillingLogLoc}"
    },
    {
      "name": "S3StagingDataNode",
      "id": "S3StagingDataNode",
      "type": "S3DataNode",
      "directoryPath": "#{myS3StagingLoc}/#{format(@scheduledStartTime, 'YYYY-MM-dd-HH-mm-ss')}"
    },
    {
      "id": "OutputDataType",
      "name": "OutputDataType",
      "type": "CSV"
    },
    {
      "id": "ZipFormatConversionActivity",
      "command": "for fname in $(find ${INPUT1_STAGING_DIR} -name *aws-billing-detailed-line-items-#{format(@scheduledStartTime, 'YYYY-MM')}.csv.zip); do unzip -p $fname | gzip > ${OUTPUT1_STAGING_DIR}/$(basename ${fname//.zip/.gz}); done ;",
      "input": {
        "ref": "S3InputDataNode"
      },
      "name": "ZipFormatConversionActivity",
      "runsOn": {
        "ref": "Ec2Instance"
      },
      "output": {
        "ref": "S3StagingDataNode"
      },
      "type": "ShellCommandActivity",
      "stage": "true"
    },
    {
      "id": "RedshiftLoadActivity",
      "input": {
        "ref": "S3StagingDataNode"
      },
      "name": "RedshiftLoadActivity",
      "runsOn": {
        "ref": "Ec2Instance"
      },
      "output": {
        "ref": "DestRedshiftTable"
      },
      "type": "RedshiftCopyActivity",
      "insertMode": "OVERWRITE_EXISTING",
	  "commandOptions": ["GZIP", "CSV", "IGNOREHEADER AS 1"]
    },
	{
      "id": "S3StagingCleanupActivity",
	  "name":  "S3StagingCleanupActivity",
      "type": "ShellCommandActivity",
      "command": "(sudo yum -y update aws-cli) && (aws s3 rm #{input.directoryPath} --recursive)",
      "runsOn": {
        "ref": "Ec2Instance"
      },
      "input": {
        "ref": "S3StagingDataNode"
      },
      "stage": "false",
	  "dependsOn": {
        "ref": "RedshiftLoadActivity"
	  }
	},
    {
      "name": "Ec2Instance",
      "id": "Ec2Instance",
      "type": "Ec2Resource",
	  "terminateAfter":"2 hours",
      "securityGroups": "#{myRedshiftSecurityGrps}"
    }
  ],
  "parameters": [
    {
      "id": "myS3BillingLogLoc",
      "type": "AWS::S3::ObjectKey",
      "description": "Input S3 folder for billing report",
      "helpText": "S3 folder that has the monthly AWS detailed billing report files with a .csv.zip format."
    },
    {
      "id": "myS3StagingLoc",
      "type": "AWS::S3::ObjectKey",
      "description": "S3 staging folder",
      "helpText": "Folder to store the unzipped CSV file before loading to Redshift. The S3 folder must be in the same region as the Redshift cluster."
    },
    {
      "id": "myRedshiftJdbcConnectStr",
      "type": "String",
      "description": "Redshift JDBC connection string",
      "watermark": "jdbc:postgresql://endpoint:port/database?tcpKeepAlive=true"
    },
    {
      "id": "myRedshiftUsername",
      "type": "String",
      "description": "Redshift username"
    },
    {
      "id": "*myRedshiftPassword",
      "type": "String",
      "description": "Redshift password"
    },
    {
      "id": "myRedshiftSecurityGrps",
      "type": "String",
      "isArray": "true",
      "description": "Redshift security group(s)",
      "default":"default",
      "helpText": "The names of one or more security groups that are assigned to the Redshift cluster.",
      "watermark": "security group name"
    },
    {
      "id": "myRedshiftDbName",
      "type": "String",
      "description": "Redshift database name"
    },
    {
      "id": "myRedshiftTableName",
      "type": "String",
      "description": "Redshift table name",
      "helpText": "The name of an existing table or a new table that will be created with the same schema as the AWS detailed billing report."
    }
  ]
}
